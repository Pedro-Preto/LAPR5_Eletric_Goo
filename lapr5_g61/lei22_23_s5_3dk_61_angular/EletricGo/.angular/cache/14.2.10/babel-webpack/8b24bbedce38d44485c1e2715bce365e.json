{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pedro/OneDrive/Documentos/Eng.Informatica_Projects/3 Ano/lapr5_g61/lei22_23_s5_3dk_61_angular/EletricGo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { CreateTruckComponent } from './create-truck.component';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { FormsModule } from '@angular/forms';\nimport { RouterTestingModule } from \"@angular/router/testing\";\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\ndescribe('CreateTruckComponent', () => {\n  let service;\n  let component;\n  let fixture;\n  let debugElement;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule, FormsModule, RouterTestingModule],\n      declarations: [CreateTruckComponent],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n    }).compileComponents();\n    fixture = TestBed.createComponent(CreateTruckComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('component should be created', () => {\n    const fixture = TestBed.createComponent(CreateTruckComponent);\n    const app = fixture.debugElement.componentInstance;\n    expect(app).toBeTruthy();\n  });\n  it('should render NEED MORE TRUCKS? in h2', () => {\n    const fixture = TestBed.createComponent(CreateTruckComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect(compiled.querySelector('h2')?.textContent).toContain('NEED MORE TRUCKS?');\n  });\n  it('should render CREATE ANOTHER ONE in h3', () => {\n    const fixture = TestBed.createComponent(CreateTruckComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect(compiled.querySelector('h3')?.textContent).toContain('CREATE ANOTHER ONE');\n  });\n});","map":{"version":3,"mappings":";AACA,SAA2BA,OAA3B,QAA0C,uBAA1C;AAEA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,uBAAT,QAA+D,8BAA/D;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AAEA,SAASC,sBAAT,EAA+CC,gBAA/C,QAAuE,eAAvE;AAGAC,QAAQ,CAAC,sBAAD,EAAyB,MAAK;EACpC,IAAIC,OAAJ;EACA,IAAIC,SAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,YAAJ;EACAC,UAAU,iCAAC,aAAW;IACpB,MAAMZ,OAAO,CAACa,sBAAR,CAA+B;MACnCC,OAAO,EAAC,CAACZ,uBAAD,EAAyBC,WAAzB,EAAqCC,mBAArC,CAD2B;MAGnCW,YAAY,EAAE,CAAEd,oBAAF,CAHqB;MAInCe,OAAO,EAAE,CAAEX,sBAAF,EAA0BC,gBAA1B;IAJ0B,CAA/B,EAMLW,iBANK,EAAN;IAQAP,OAAO,GAAGV,OAAO,CAACkB,eAAR,CAAwBjB,oBAAxB,CAAV;IACAQ,SAAS,GAAGC,OAAO,CAACS,iBAApB;IACAT,OAAO,CAACU,aAAR;EAED,CAbS,EAAV;EAeAC,EAAE,CAAC,6BAAD,EAA+B,MAAK;IACpC,MAAMX,OAAO,GAAGV,OAAO,CAACkB,eAAR,CAAwBjB,oBAAxB,CAAhB;IACA,MAAMqB,GAAG,GAAGZ,OAAO,CAACC,YAAR,CAAqBQ,iBAAjC;IACAI,MAAM,CAACD,GAAD,CAAN,CAAYE,UAAZ;EACC,CAJD,CAAF;EAOAH,EAAE,CAAC,uCAAD,EAA0C,MAAK;IAC/C,MAAMX,OAAO,GAAGV,OAAO,CAACkB,eAAR,CAAwBjB,oBAAxB,CAAhB;IACAS,OAAO,CAACU,aAAR;IACA,MAAMK,QAAQ,GAAGf,OAAO,CAACgB,aAAzB;IACAH,MAAM,CAACE,QAAQ,CAACE,aAAT,CAAuB,IAAvB,GAA8BC,WAA/B,CAAN,CAAkDC,SAAlD,CAA4D,mBAA5D;EACD,CALC,CAAF;EAOAR,EAAE,CAAC,wCAAD,EAA2C,MAAK;IAChD,MAAMX,OAAO,GAAGV,OAAO,CAACkB,eAAR,CAAwBjB,oBAAxB,CAAhB;IACAS,OAAO,CAACU,aAAR;IACA,MAAMK,QAAQ,GAAGf,OAAO,CAACgB,aAAzB;IACAH,MAAM,CAACE,QAAQ,CAACE,aAAT,CAAuB,IAAvB,GAA8BC,WAA/B,CAAN,CAAkDC,SAAlD,CAA4D,oBAA5D;EACD,CALC,CAAF;AAUD,CA5CO,CAAR","names":["TestBed","CreateTruckComponent","HttpClientTestingModule","FormsModule","RouterTestingModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","describe","service","component","fixture","debugElement","beforeEach","configureTestingModule","imports","declarations","schemas","compileComponents","createComponent","componentInstance","detectChanges","it","app","expect","toBeTruthy","compiled","nativeElement","querySelector","textContent","toContain"],"sourceRoot":"","sources":["C:\\Users\\pedro\\OneDrive\\Documentos\\Eng.Informatica_Projects\\3 Ano\\lapr5_g61\\lei22_23_s5_3dk_61_angular\\EletricGo\\src\\app\\views\\create-truck\\create-truck.component.spec.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport {TrucksService} from \"../../services/node/truck.service\";\r\nimport { CreateTruckComponent } from './create-truck.component';\r\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterTestingModule } from \"@angular/router/testing\";\r\nimport { By } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, DebugElement, NO_ERRORS_SCHEMA } from '@angular/core';\r\n\r\n\r\ndescribe('CreateTruckComponent', () => {\r\n  let service: TrucksService;\r\n  let component: CreateTruckComponent;\r\n  let fixture: ComponentFixture<CreateTruckComponent>;\r\n  let debugElement: DebugElement;\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports:[HttpClientTestingModule,FormsModule,RouterTestingModule],\r\n      \r\n      declarations: [ CreateTruckComponent ],\r\n      schemas: [ CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA ],\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(CreateTruckComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n    \r\n  });\r\n\r\n  it('component should be created',() => {\r\n    const fixture = TestBed.createComponent(CreateTruckComponent);\r\n    const app = fixture.debugElement.componentInstance;\r\n    expect(app).toBeTruthy();\r\n    });\r\n\r\n\r\n  it('should render NEED MORE TRUCKS? in h2', () => {\r\n    const fixture = TestBed.createComponent(CreateTruckComponent);\r\n    fixture.detectChanges();\r\n    const compiled = fixture.nativeElement as HTMLElement;\r\n    expect(compiled.querySelector('h2')?.textContent).toContain('NEED MORE TRUCKS?');\r\n  });\r\n\r\n  it('should render CREATE ANOTHER ONE in h3', () => {\r\n    const fixture = TestBed.createComponent(CreateTruckComponent);\r\n    fixture.detectChanges();\r\n    const compiled = fixture.nativeElement as HTMLElement;\r\n    expect(compiled.querySelector('h3')?.textContent).toContain('CREATE ANOTHER ONE');\r\n  });\r\n\r\n\r\n\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}